{"version":3,"sources":["pages/home/HomeRedux.ts","pages/home/headnav/Head.tsx","pages/home/newjob/Newjon.tsx","pages/home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BasicTypes","FetchTypes","Head","className","src","alt","this","props","nav","map","item","index","url","active","key","href","text","React","Component","Newjob","state","top","jobList","timer","setTime","setInterval","setState","newJobList","splitarr","splice","concat","style","onMouseEnter","clearInterval","onMouseLeave","value","place","time","Types","composeTypes","prefix","actions","spliceLoop","createAction","reduceTop","setJobList","InitialState","navArr","Search","Input","mapDispatchToProps","Home","hotText","placeholder","enterButton","size","onSearch","console","log","connect","ownProp","App","path","component","Boolean","window","location","hostname","match","store","createStore","action","type","newState","AsyncTuple","handleAll","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3855f26.chunk.js","sourcesContent":["import {composeTypes,createAction,ActionType,AsyncTuple,ThunkAction} from \"iron-redux\";\r\n\r\n\r\nenum BasicTypes {\r\n    spliceLoop,\r\n    reduceTop,\r\n    setJobList,\r\n\r\n}\r\n\r\nenum FetchTypes {\r\n    getJobLists,\r\n    \r\n\r\n}\r\n\r\nconst prefix = 'ALIBABA';\r\n\r\nconst Types=composeTypes({\r\n    BasicTypes,\r\n    FetchTypes,\r\n    prefix\r\n\r\n})\r\n\r\nexport const actions ={\r\n    spliceLoop:createAction(Types.spliceLoop)<any>(),\r\n    reduceTop:createAction(Types.reduceTop)<number>(),\r\n    setJobList:createAction(Types.setJobList)<string>(),\r\n       \r\n}\r\n\r\nexport class InitialState{\r\n    navArr:{text:string,url:string|null}[]=[\r\n        {text:\"社招官网\",url:null},\r\n        {text:\"首   页\",url:\"https://job.alibaba.com/zhaopin/index.htm\"},\r\n        {text:\"社会招聘\",url:\"https://job.alibaba.com/zhaopin/positionList.htm\"},\r\n        {text:\"校园招聘\",url:\"https://campus.alibaba.com\"},\r\n        {text:\"了解阿里\",url:\"https://job.alibaba.com/zhaopin/about.htm\"},\r\n        {text:\"个人中心\",url:\"https://job.alibaba.com/zhaopin/apply.htm\"}\r\n    ]\r\n\r\n    jobList:{value:string,time:string,place:string}[]=[\r\n      {value:\"阿里云智能事业群-电力行业高级解决方案架构师-杭州\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"阿里云智能事业群-电力行业高级解决方案架构师-杭州\",time:\"20分钟前\",place:\"杭州\"},\r\n      {value:\"Alibaba Cloud Intelligence-高级解决方案架构师（泛互联网行业）-Hangzhou\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"java\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"java\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"IOS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"IOS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"IOS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"IOS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"IOS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"前端\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"前端\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"前端\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"前端\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"JS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"JS\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"PHP\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"PHP\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"REACT\",time:\"3分钟前\",place:\"杭州\"},\r\n      {value:\"VUE\",time:\"3分钟前\",place:\"杭州\"},\r\n    ]\r\n\r\n    timer:any=null\r\n}\r\n\r\nexport default (state=new InitialState(),action: ActionType<typeof actions>):InitialState=>{\r\n        switch (action.type){\r\n            case Types.spliceLoop:\r\n                const newState=state\r\n                const newJobList=newState.jobList;\r\n                const splitarr=newJobList.splice(0,10)\r\n                newState.jobList=newJobList.concat(splitarr)\r\n            return newState;\r\n            case Types.setJobList:\r\n                return state\r\n            case Types.reduceTop:\r\n                return state\r\n            default:\r\n                return AsyncTuple.handleAll(prefix,state,action)\r\n    \r\n        }\r\n     \r\n}","import React from 'react';\r\nimport \"./Head.scss\"\r\nimport className from 'classnames'\r\n\r\ninterface Props {\r\n  nav:{text:string,url:string|null}[]\r\n}\r\nclass Head extends React.Component<Props>{\r\n  render(){\r\n    return (\r\n        <div className=\"head-nav\">\r\n\r\n            <div className=\"nav-content\">\r\n                <img className=\"ali-log\" src=\"https://img.alicdn.com/tfs/TB1Zv8_lxSYBuNjSspjXXX73VXa-390-63.png\" alt=\"\"/>\r\n                <i className='cut-off'/>\r\n\r\n                <div className='nav-link'>\r\n                    {this.props.nav.map((item,index)=>{\r\n                       if(item.url) return <span className={className(\"nav-item\",{active:index===0})} key={item.url}><a href={item.url}>{item.text}</a></span>\r\n                       return <span className=\"nav-item\" key={index}>{item.text}</span>\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"welcome\">\r\n                    欢迎来到阿里巴巴，\r\n                    <a href=\"\">登录</a>\r\n                    <i className='cut-off'></i>\r\n                    <a href=\"\">注册</a>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Head;\r\n","import React from 'react';\r\nimport {InitialState} from '../HomeRedux'\r\nimport './Newjon.scss'\r\n\r\ninterface Props {\r\n  jobList:InitialState[\"jobList\"]\r\n}\r\n\r\ninterface State {\r\n  top:number;\r\n  jobList:InitialState[\"jobList\"]\r\n}\r\n\r\nclass Newjob extends React.Component<Props,State>{\r\n  state={\r\n    top:0,\r\n    jobList:[] as InitialState[\"jobList\"]\r\n  }\r\n\r\n  timer:any=null\r\n  setTime=()=>setInterval(()=>{\r\n    this.setState({top:this.state.top-1},()=>{\r\n      if(this.state.top<-500){\r\n        const newJobList=this.state.jobList;\r\n        const splitarr=newJobList.splice(0,10)\r\n        this.setState({jobList:newJobList.concat(splitarr),top:0})\r\n      \r\n      }\r\n    })\r\n  },50)\r\n\r\n  componentDidMount(){\r\n    this.setState({jobList:this.props.jobList},()=>{\r\n      this.timer=this.setTime()\r\n    })\r\n    \r\n    \r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"new-job-box\">\r\n        <div className='new-job-left'>\r\n          <div className=\"show-job\">\r\n            <span>最新职位</span>\r\n            <span>\r\n              更多\r\n            </span>\r\n          </div>\r\n          <div className='over-hide-box'>\r\n            <ul className='job-list' style={{top:this.state.top}}  \r\n              onMouseEnter={()=>{\r\n                this.timer&& clearInterval(this.timer)\r\n\r\n              }} \r\n              onMouseLeave={()=>{\r\n                this.timer=this.setTime()\r\n              }}>\r\n              {this.state.jobList.map((item,index)=>{\r\n                return(\r\n                  <li key={index}>\r\n                    <span className=\"item-job\">{item.value}</span>\r\n                    <span className='item-place'>{item.place}</span>\r\n                    <span className=\"item-time\">{item.time}</span>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='new-job-right'>\r\n          <div className='ali-cloud'>\r\n            <img src='https://img.alicdn.com/tfs/TB1SbxarYj1gK0jSZFOXXc7GpXa-2546-848.png'></img>\r\n          </div>\r\n          <div className='alibaba-log'>\r\n            <img src=\"https://img.alicdn.com/tfs/TB18tFCCH2pK1RjSZFsXXaNlXXa-240-34.svg\" alt=\"\"/>\r\n          </div>\r\n        </div>\r\n     </div>\r\n    ) \r\n  }\r\n\r\n}\r\nexport default Newjob;\r\n","import React from 'react';\r\nimport Head from './headnav/Head';\r\nimport Newjob from './newjob/Newjon';\r\nimport './Home.scss';\r\nimport {connect} from 'react-redux';\r\nimport {InitialState,actions} from \"./HomeRedux\"\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\n\r\n\r\nconst mapStateToProps=(state?:any,ownProp?:any):any=>{\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps={...actions}\r\ninterface State {\r\n  hotText:string[]\r\n}\r\n\r\nclass Home extends React.Component<InitialState&typeof actions,State>{\r\n  state={\r\n    hotText:[\"JAVA\",\"IOS\",\"数据\",\"安全\",\"搜索\",\"算法\",\"运营\",\"视觉\",\"交互\",\"前端\"]\r\n  }\r\n \r\n  render(){\r\n    const {jobList,spliceLoop} = this.props\r\n    return (\r\n      <div className=\"home-page\">\r\n        <Head nav={this.props.navArr}></Head>\r\n        <div className=\"bg-box\">\r\n          <div className=\"bg-dim\">\r\n            <div className=\"search-container\">\r\n              <div className=\"search\">\r\n                <p >If not now, when?</p>\r\n                <p>If not me, who?</p>\r\n                <p className=\"cn\">此时此刻，非我莫属！</p>\r\n\r\n                <div className=\"search-box\">\r\n                  <Search\r\n                    className=\"job-search\"\r\n                    placeholder=\"请输入职位关键词\"\r\n                    enterButton=\"搜索\"\r\n                    size=\"large\"\r\n                    onSearch={(value:string) => console.log(value)}\r\n                  /> \r\n                 \r\n                </div>\r\n                <div className=\"hot-search\">\r\n                    <span>热门搜索：</span>\r\n                    {this.state.hotText.map((item,index)=><span key={item} className=\"item\">{item}</span>)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Newjob jobList={jobList}></Newjob>\r\n        <div className='footer'>\r\n\t\t        阿里巴巴集团 Copyright ©1999-2020 版权所有\r\n        </div>\r\n     </div>\r\n    ) \r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);\r\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter ,Route} from 'react-router-dom';\nimport Home from './pages/home/Home'\n\ninterface Props {\n  name:string\n}\nclass App extends React.Component<any>{\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"root-entry\">\n          <Route path='/' component={Home}></Route>\n        </div>\n      </BrowserRouter>\n  )\n    \n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './pages/home/HomeRedux'\nimport * as serviceWorker from './serviceWorker';\n\nconst store =createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> \n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}